{
  "openapi": "3.0.1",
  "info": {
    "title": "EducationApi",
    "version": "v1"
  },
  "paths": {
    "/api/Attendance/get-all-attendance": {
      "get": {
        "tags": [
          "Attendance"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Attendance/get-by-id-attendance/{id}": {
      "get": {
        "tags": [
          "Attendance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Attendance/create-attendance": {
      "post": {
        "tags": [
          "Attendance"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Attendance/update-attendance-by-id/{id}": {
      "put": {
        "tags": [
          "Attendance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Attendance/delete-attendance-by-id/{id}": {
      "delete": {
        "tags": [
          "Attendance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDtoApiResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDtoApiResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDtoApiResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Auth/verify-otp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/File/upload": {
      "post": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "bucketName",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "my-test-bucket"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/File/download": {
      "get": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "bucketName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/File/delete": {
      "delete": {
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "bucketName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/File/get-all-files": {
      "get": {
        "tags": [
          "File"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/get-all-group": {
      "get": {
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/get-by-id-group/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/get-by-condition-group-count": {
      "get": {
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/get-by-condition-all-active-groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/get-by-condition-all-no-active-groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/create-group": {
      "post": {
        "tags": [
          "Group"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreatedDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreatedDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreatedDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreatedDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/update-group-by-id/{id}": {
      "put": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Group/delete-group-by-id/{id}": {
      "delete": {
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GroupSubject/get-all-group-subject": {
      "get": {
        "tags": [
          "GroupSubject"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GroupSubject/get-by-id-group-subject/{id}": {
      "get": {
        "tags": [
          "GroupSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GroupSubject/create-group-subject": {
      "post": {
        "tags": [
          "GroupSubject"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GroupSubject/update-group-subject-by-id/{id}": {
      "put": {
        "tags": [
          "GroupSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupSubjectUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/GroupSubject/delete-group-subject-by-id/{id}": {
      "delete": {
        "tags": [
          "GroupSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/get-all-payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/get-by-id-payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/create-payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/update-payment-by-id/{id}": {
      "put": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Payment/delete-payment-by-id/{id}": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentDocument/get-all-payment-document": {
      "get": {
        "tags": [
          "PaymentDocument"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentDocument/get-by-id-payment-document/{id}": {
      "get": {
        "tags": [
          "PaymentDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentDocument/create-payment-document": {
      "post": {
        "tags": [
          "PaymentDocument"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentDocument/update-payment-document-by-id/{id}": {
      "put": {
        "tags": [
          "PaymentDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDocumentUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PaymentDocument/delete-payment-document-by-id/{id}": {
      "delete": {
        "tags": [
          "PaymentDocument"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Permission": {
      "post": {
        "tags": [
          "Permission"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Permission/get-all-permissions": {
      "get": {
        "tags": [
          "Permission"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role": {
      "post": {
        "tags": [
          "Role"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Role/{id}/permissions": {
      "post": {
        "tags": [
          "Role"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Room/get-all-room": {
      "get": {
        "tags": [
          "Room"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Room/get-by-id-room/{id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Room/create-room": {
      "post": {
        "tags": [
          "Room"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Room/update-room-by-id/{id}": {
      "put": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoomUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoomUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Room/delete-room-by-id/{id}": {
      "delete": {
        "tags": [
          "Room"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-all-staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-by-id-staff/{id}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-by-condition-staff-count": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-by-condition-all-active-staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-by-condition-all-teachers": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/get-by-condition-all-other-staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/create-staff": {
      "post": {
        "tags": [
          "Staff"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/update-staff-by-id/{id}": {
      "put": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Staff/delete-staff-by-id/{id}": {
      "delete": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffSubject/get-all-staff-subject": {
      "get": {
        "tags": [
          "StaffSubject"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffSubject/get-by-id-staff-subject/{id}": {
      "get": {
        "tags": [
          "StaffSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffSubject/create-staff-subject": {
      "post": {
        "tags": [
          "StaffSubject"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffSubject/update-staff-subject-by-id/{id}": {
      "put": {
        "tags": [
          "StaffSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StaffSubjectUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/StaffSubject/delete-staff-subject-by-id/{id}": {
      "delete": {
        "tags": [
          "StaffSubject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-all-student": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-id-student/{id}": {
      "get": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-count-active-students": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-count-unpaid-students": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-paid-students-on-this-month": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-count-droppedout-students-active-group": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-all-active-students": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-all-inactive-students": {
      "get": {
        "tags": [
          "Student"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/get-by-condition-return-last-payment": {
      "put": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/create-student": {
      "post": {
        "tags": [
          "Student"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/update-student-by-id/{id}": {
      "put": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/delete-student-by-id/{id}": {
      "delete": {
        "tags": [
          "Student"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject/get-all-subject": {
      "get": {
        "tags": [
          "Subject"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject/get-by-id-subject/{id}": {
      "get": {
        "tags": [
          "Subject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject/create-subject": {
      "post": {
        "tags": [
          "Subject"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject/update-subject-by-id/{id}": {
      "put": {
        "tags": [
          "Subject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubjectUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Subject/delete-subject-by-id/{id}": {
      "delete": {
        "tags": [
          "Subject"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/get-all-user": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/get-by-id-user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/create-user": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/update-user-by-id/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/delete-user-by-id/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UsersRole/{id}/roles": {
      "post": {
        "tags": [
          "UsersRole"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttendanceCreateDto": {
        "required": [
          "attendanceDate",
          "groupId",
          "groupSubjectId",
          "isPresent",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "groupSubjectId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "attendanceDate": {
            "type": "string",
            "format": "date-time"
          },
          "isPresent": {
            "type": "boolean"
          },
          "preparedness": {
            "$ref": "#/components/schemas/PreparednessLevel"
          },
          "participation": {
            "$ref": "#/components/schemas/ParticipationLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttendanceUpdateDto": {
        "type": "object",
        "properties": {
          "isPresent": {
            "type": "boolean",
            "nullable": true
          },
          "preparedness": {
            "$ref": "#/components/schemas/PreparednessLevel"
          },
          "participation": {
            "$ref": "#/components/schemas/ParticipationLevel"
          },
          "note": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSubjectDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Gender": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "GroupCreatedDto": {
        "required": [
          "endDate",
          "name",
          "staffId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupSubjectCreateDto": {
        "required": [
          "endTime",
          "groupId",
          "roomId",
          "sessionDate",
          "staffId",
          "startTime",
          "subjectId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int32"
          },
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "roomId": {
            "type": "integer",
            "format": "int32"
          },
          "sessionDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-span"
          },
          "endTime": {
            "type": "string",
            "format": "date-span"
          }
        },
        "additionalProperties": false
      },
      "GroupSubjectUpdateDto": {
        "type": "object",
        "properties": {
          "roomId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sessionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "staffId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginResponseDtoApiResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "result": {
            "$ref": "#/components/schemas/LoginResponseDto"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtpVerificationModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParticipationLevel": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentCreateDto": {
        "required": [
          "amount",
          "paymentType",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "paymentImgUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentDocumentCreateDto": {
        "required": [
          "paymentId"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentDocumentUpdateDto": {
        "type": "object",
        "properties": {
          "fileUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentUpdateDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "paymentImgUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Position": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PreparednessLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "RegisterRequestDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "isadminSite": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoomCreateDto": {
        "required": [
          "capacity",
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "minLength": 1,
            "type": "string"
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoomUpdateDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "capacity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StaffCreateDto": {
        "required": [
          "dateBirth",
          "email",
          "firstName",
          "gender",
          "lastName",
          "password",
          "phoneNumber",
          "position",
          "salary"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 3,
            "type": "string"
          },
          "lastName": {
            "minLength": 3,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 25,
            "minLength": 8,
            "type": "string"
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "salary": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StaffSubjectCreateDto": {
        "required": [
          "staffId",
          "subjectId"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StaffSubjectUpdateDto": {
        "required": [
          "staffId",
          "subjectId"
        ],
        "type": "object",
        "properties": {
          "staffId": {
            "type": "integer",
            "format": "int32"
          },
          "subjectId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StaffUpdateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "position": {
            "$ref": "#/components/schemas/Position"
          },
          "salary": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringApiResult": {
        "type": "object",
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentCreateDto": {
        "required": [
          "dateBirth",
          "email",
          "firstName",
          "gender",
          "joinDate",
          "lastName",
          "password",
          "phoneNumber",
          "status"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 3,
            "type": "string"
          },
          "lastName": {
            "minLength": 3,
            "type": "string"
          },
          "phoneNumber": {
            "minLength": 1,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 25,
            "minLength": 8,
            "type": "string"
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StudentUpdateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubjectUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserCreateDto": {
        "required": [
          "email",
          "firstName",
          "gender",
          "lastName",
          "password",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 30,
            "minLength": 9,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 8,
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          }
        },
        "additionalProperties": false
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 15,
            "minLength": 9,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "dateBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Bearer {your token}'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}